/**
 * generated by Xtext 2.13.0
 */
package org.xtext.example.mydsl.myDsl;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Direct Abstract Declarrator Linha Action</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.DirectAbstractDeclarratorLinhaAction#getDirect_abstract_declarator_complement <em>Direct abstract declarator complement</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.DirectAbstractDeclarratorLinhaAction#getDirect_abstract_declarator_linha <em>Direct abstract declarator linha</em>}</li>
 * </ul>
 *
 * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getDirectAbstractDeclarratorLinhaAction()
 * @model
 * @generated
 */
public interface DirectAbstractDeclarratorLinhaAction extends direct_abstract_declarator_linha
{
  /**
   * Returns the value of the '<em><b>Direct abstract declarator complement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Direct abstract declarator complement</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Direct abstract declarator complement</em>' containment reference.
   * @see #setDirect_abstract_declarator_complement(direct_abstract_declarator_complement)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getDirectAbstractDeclarratorLinhaAction_Direct_abstract_declarator_complement()
   * @model containment="true"
   * @generated
   */
  direct_abstract_declarator_complement getDirect_abstract_declarator_complement();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.DirectAbstractDeclarratorLinhaAction#getDirect_abstract_declarator_complement <em>Direct abstract declarator complement</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Direct abstract declarator complement</em>' containment reference.
   * @see #getDirect_abstract_declarator_complement()
   * @generated
   */
  void setDirect_abstract_declarator_complement(direct_abstract_declarator_complement value);

  /**
   * Returns the value of the '<em><b>Direct abstract declarator linha</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Direct abstract declarator linha</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Direct abstract declarator linha</em>' containment reference.
   * @see #setDirect_abstract_declarator_linha(direct_abstract_declarator_linha)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getDirectAbstractDeclarratorLinhaAction_Direct_abstract_declarator_linha()
   * @model containment="true"
   * @generated
   */
  direct_abstract_declarator_linha getDirect_abstract_declarator_linha();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.DirectAbstractDeclarratorLinhaAction#getDirect_abstract_declarator_linha <em>Direct abstract declarator linha</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Direct abstract declarator linha</em>' containment reference.
   * @see #getDirect_abstract_declarator_linha()
   * @generated
   */
  void setDirect_abstract_declarator_linha(direct_abstract_declarator_linha value);

} // DirectAbstractDeclarratorLinhaAction
