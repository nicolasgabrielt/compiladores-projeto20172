/**
 * generated by Xtext 2.13.0
 */
package org.xtext.example.mydsl.myDsl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>parameter declaration</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.parameter_declaration#getDeclaration_specifiers <em>Declaration specifiers</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.parameter_declaration#getDeclarator <em>Declarator</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.parameter_declaration#getAbstract_declarator <em>Abstract declarator</em>}</li>
 * </ul>
 *
 * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getparameter_declaration()
 * @model
 * @generated
 */
public interface parameter_declaration extends EObject
{
  /**
   * Returns the value of the '<em><b>Declaration specifiers</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Declaration specifiers</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Declaration specifiers</em>' containment reference.
   * @see #setDeclaration_specifiers(declaration_specifiers)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getparameter_declaration_Declaration_specifiers()
   * @model containment="true"
   * @generated
   */
  declaration_specifiers getDeclaration_specifiers();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.parameter_declaration#getDeclaration_specifiers <em>Declaration specifiers</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Declaration specifiers</em>' containment reference.
   * @see #getDeclaration_specifiers()
   * @generated
   */
  void setDeclaration_specifiers(declaration_specifiers value);

  /**
   * Returns the value of the '<em><b>Declarator</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Declarator</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Declarator</em>' containment reference.
   * @see #setDeclarator(declarator)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getparameter_declaration_Declarator()
   * @model containment="true"
   * @generated
   */
  declarator getDeclarator();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.parameter_declaration#getDeclarator <em>Declarator</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Declarator</em>' containment reference.
   * @see #getDeclarator()
   * @generated
   */
  void setDeclarator(declarator value);

  /**
   * Returns the value of the '<em><b>Abstract declarator</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Abstract declarator</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Abstract declarator</em>' containment reference.
   * @see #setAbstract_declarator(abstract_declarator)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getparameter_declaration_Abstract_declarator()
   * @model containment="true"
   * @generated
   */
  abstract_declarator getAbstract_declarator();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.parameter_declaration#getAbstract_declarator <em>Abstract declarator</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Abstract declarator</em>' containment reference.
   * @see #getAbstract_declarator()
   * @generated
   */
  void setAbstract_declarator(abstract_declarator value);

} // parameter_declaration
