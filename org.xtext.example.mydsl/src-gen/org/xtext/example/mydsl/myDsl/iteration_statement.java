/**
 * generated by Xtext 2.13.0
 */
package org.xtext.example.mydsl.myDsl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>iteration statement</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.iteration_statement#getExpression <em>Expression</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.iteration_statement#getStatement <em>Statement</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.iteration_statement#getExpression_statement <em>Expression statement</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.iteration_statement#getExpression_statement2 <em>Expression statement2</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.iteration_statement#getDeclaration <em>Declaration</em>}</li>
 * </ul>
 *
 * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getiteration_statement()
 * @model
 * @generated
 */
public interface iteration_statement extends EObject
{
  /**
   * Returns the value of the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Expression</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Expression</em>' containment reference.
   * @see #setExpression(expression)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getiteration_statement_Expression()
   * @model containment="true"
   * @generated
   */
  expression getExpression();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.iteration_statement#getExpression <em>Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Expression</em>' containment reference.
   * @see #getExpression()
   * @generated
   */
  void setExpression(expression value);

  /**
   * Returns the value of the '<em><b>Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Statement</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Statement</em>' containment reference.
   * @see #setStatement(statement)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getiteration_statement_Statement()
   * @model containment="true"
   * @generated
   */
  statement getStatement();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.iteration_statement#getStatement <em>Statement</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Statement</em>' containment reference.
   * @see #getStatement()
   * @generated
   */
  void setStatement(statement value);

  /**
   * Returns the value of the '<em><b>Expression statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Expression statement</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Expression statement</em>' containment reference.
   * @see #setExpression_statement(expression_statement)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getiteration_statement_Expression_statement()
   * @model containment="true"
   * @generated
   */
  expression_statement getExpression_statement();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.iteration_statement#getExpression_statement <em>Expression statement</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Expression statement</em>' containment reference.
   * @see #getExpression_statement()
   * @generated
   */
  void setExpression_statement(expression_statement value);

  /**
   * Returns the value of the '<em><b>Expression statement2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Expression statement2</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Expression statement2</em>' containment reference.
   * @see #setExpression_statement2(expression_statement)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getiteration_statement_Expression_statement2()
   * @model containment="true"
   * @generated
   */
  expression_statement getExpression_statement2();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.iteration_statement#getExpression_statement2 <em>Expression statement2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Expression statement2</em>' containment reference.
   * @see #getExpression_statement2()
   * @generated
   */
  void setExpression_statement2(expression_statement value);

  /**
   * Returns the value of the '<em><b>Declaration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Declaration</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Declaration</em>' containment reference.
   * @see #setDeclaration(declaration)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#getiteration_statement_Declaration()
   * @model containment="true"
   * @generated
   */
  declaration getDeclaration();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.iteration_statement#getDeclaration <em>Declaration</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Declaration</em>' containment reference.
   * @see #getDeclaration()
   * @generated
   */
  void setDeclaration(declaration value);

} // iteration_statement
