/**
 * generated by Xtext 2.13.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.specifier_qualifier_list;
import org.xtext.example.mydsl.myDsl.static_assert_declaration;
import org.xtext.example.mydsl.myDsl.struct_declaration;
import org.xtext.example.mydsl.myDsl.struct_declarator_list;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>struct declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.struct_declarationImpl#getSpecifier_qualifier_list <em>Specifier qualifier list</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.struct_declarationImpl#getStruct_declarator_list <em>Struct declarator list</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.struct_declarationImpl#getStatic_assert_declaration <em>Static assert declaration</em>}</li>
 * </ul>
 *
 * @generated
 */
public class struct_declarationImpl extends MinimalEObjectImpl.Container implements struct_declaration
{
  /**
   * The cached value of the '{@link #getSpecifier_qualifier_list() <em>Specifier qualifier list</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpecifier_qualifier_list()
   * @generated
   * @ordered
   */
  protected specifier_qualifier_list specifier_qualifier_list;

  /**
   * The cached value of the '{@link #getStruct_declarator_list() <em>Struct declarator list</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStruct_declarator_list()
   * @generated
   * @ordered
   */
  protected struct_declarator_list struct_declarator_list;

  /**
   * The cached value of the '{@link #getStatic_assert_declaration() <em>Static assert declaration</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatic_assert_declaration()
   * @generated
   * @ordered
   */
  protected static_assert_declaration static_assert_declaration;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected struct_declarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.STRUCT_DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public specifier_qualifier_list getSpecifier_qualifier_list()
  {
    return specifier_qualifier_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSpecifier_qualifier_list(specifier_qualifier_list newSpecifier_qualifier_list, NotificationChain msgs)
  {
    specifier_qualifier_list oldSpecifier_qualifier_list = specifier_qualifier_list;
    specifier_qualifier_list = newSpecifier_qualifier_list;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STRUCT_DECLARATION__SPECIFIER_QUALIFIER_LIST, oldSpecifier_qualifier_list, newSpecifier_qualifier_list);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSpecifier_qualifier_list(specifier_qualifier_list newSpecifier_qualifier_list)
  {
    if (newSpecifier_qualifier_list != specifier_qualifier_list)
    {
      NotificationChain msgs = null;
      if (specifier_qualifier_list != null)
        msgs = ((InternalEObject)specifier_qualifier_list).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STRUCT_DECLARATION__SPECIFIER_QUALIFIER_LIST, null, msgs);
      if (newSpecifier_qualifier_list != null)
        msgs = ((InternalEObject)newSpecifier_qualifier_list).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STRUCT_DECLARATION__SPECIFIER_QUALIFIER_LIST, null, msgs);
      msgs = basicSetSpecifier_qualifier_list(newSpecifier_qualifier_list, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STRUCT_DECLARATION__SPECIFIER_QUALIFIER_LIST, newSpecifier_qualifier_list, newSpecifier_qualifier_list));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public struct_declarator_list getStruct_declarator_list()
  {
    return struct_declarator_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStruct_declarator_list(struct_declarator_list newStruct_declarator_list, NotificationChain msgs)
  {
    struct_declarator_list oldStruct_declarator_list = struct_declarator_list;
    struct_declarator_list = newStruct_declarator_list;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STRUCT_DECLARATION__STRUCT_DECLARATOR_LIST, oldStruct_declarator_list, newStruct_declarator_list);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStruct_declarator_list(struct_declarator_list newStruct_declarator_list)
  {
    if (newStruct_declarator_list != struct_declarator_list)
    {
      NotificationChain msgs = null;
      if (struct_declarator_list != null)
        msgs = ((InternalEObject)struct_declarator_list).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STRUCT_DECLARATION__STRUCT_DECLARATOR_LIST, null, msgs);
      if (newStruct_declarator_list != null)
        msgs = ((InternalEObject)newStruct_declarator_list).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STRUCT_DECLARATION__STRUCT_DECLARATOR_LIST, null, msgs);
      msgs = basicSetStruct_declarator_list(newStruct_declarator_list, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STRUCT_DECLARATION__STRUCT_DECLARATOR_LIST, newStruct_declarator_list, newStruct_declarator_list));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static_assert_declaration getStatic_assert_declaration()
  {
    return static_assert_declaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStatic_assert_declaration(static_assert_declaration newStatic_assert_declaration, NotificationChain msgs)
  {
    static_assert_declaration oldStatic_assert_declaration = static_assert_declaration;
    static_assert_declaration = newStatic_assert_declaration;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STRUCT_DECLARATION__STATIC_ASSERT_DECLARATION, oldStatic_assert_declaration, newStatic_assert_declaration);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStatic_assert_declaration(static_assert_declaration newStatic_assert_declaration)
  {
    if (newStatic_assert_declaration != static_assert_declaration)
    {
      NotificationChain msgs = null;
      if (static_assert_declaration != null)
        msgs = ((InternalEObject)static_assert_declaration).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STRUCT_DECLARATION__STATIC_ASSERT_DECLARATION, null, msgs);
      if (newStatic_assert_declaration != null)
        msgs = ((InternalEObject)newStatic_assert_declaration).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STRUCT_DECLARATION__STATIC_ASSERT_DECLARATION, null, msgs);
      msgs = basicSetStatic_assert_declaration(newStatic_assert_declaration, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STRUCT_DECLARATION__STATIC_ASSERT_DECLARATION, newStatic_assert_declaration, newStatic_assert_declaration));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.STRUCT_DECLARATION__SPECIFIER_QUALIFIER_LIST:
        return basicSetSpecifier_qualifier_list(null, msgs);
      case MyDslPackage.STRUCT_DECLARATION__STRUCT_DECLARATOR_LIST:
        return basicSetStruct_declarator_list(null, msgs);
      case MyDslPackage.STRUCT_DECLARATION__STATIC_ASSERT_DECLARATION:
        return basicSetStatic_assert_declaration(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.STRUCT_DECLARATION__SPECIFIER_QUALIFIER_LIST:
        return getSpecifier_qualifier_list();
      case MyDslPackage.STRUCT_DECLARATION__STRUCT_DECLARATOR_LIST:
        return getStruct_declarator_list();
      case MyDslPackage.STRUCT_DECLARATION__STATIC_ASSERT_DECLARATION:
        return getStatic_assert_declaration();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.STRUCT_DECLARATION__SPECIFIER_QUALIFIER_LIST:
        setSpecifier_qualifier_list((specifier_qualifier_list)newValue);
        return;
      case MyDslPackage.STRUCT_DECLARATION__STRUCT_DECLARATOR_LIST:
        setStruct_declarator_list((struct_declarator_list)newValue);
        return;
      case MyDslPackage.STRUCT_DECLARATION__STATIC_ASSERT_DECLARATION:
        setStatic_assert_declaration((static_assert_declaration)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.STRUCT_DECLARATION__SPECIFIER_QUALIFIER_LIST:
        setSpecifier_qualifier_list((specifier_qualifier_list)null);
        return;
      case MyDslPackage.STRUCT_DECLARATION__STRUCT_DECLARATOR_LIST:
        setStruct_declarator_list((struct_declarator_list)null);
        return;
      case MyDslPackage.STRUCT_DECLARATION__STATIC_ASSERT_DECLARATION:
        setStatic_assert_declaration((static_assert_declaration)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.STRUCT_DECLARATION__SPECIFIER_QUALIFIER_LIST:
        return specifier_qualifier_list != null;
      case MyDslPackage.STRUCT_DECLARATION__STRUCT_DECLARATOR_LIST:
        return struct_declarator_list != null;
      case MyDslPackage.STRUCT_DECLARATION__STATIC_ASSERT_DECLARATION:
        return static_assert_declaration != null;
    }
    return super.eIsSet(featureID);
  }

} //struct_declarationImpl
