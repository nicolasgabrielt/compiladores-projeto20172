/**
 * generated by Xtext 2.13.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.atomic_type_specifier;
import org.xtext.example.mydsl.myDsl.enum_specifier;
import org.xtext.example.mydsl.myDsl.struct_or_union_specifier;
import org.xtext.example.mydsl.myDsl.type_specifier;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>type specifier</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.type_specifierImpl#getType_name_str <em>Type name str</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.type_specifierImpl#getAtomic_type_specifier <em>Atomic type specifier</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.type_specifierImpl#getStruct_or_union_specifier <em>Struct or union specifier</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.type_specifierImpl#getEnum_specifier <em>Enum specifier</em>}</li>
 * </ul>
 *
 * @generated
 */
public class type_specifierImpl extends MinimalEObjectImpl.Container implements type_specifier
{
  /**
   * The default value of the '{@link #getType_name_str() <em>Type name str</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType_name_str()
   * @generated
   * @ordered
   */
  protected static final String TYPE_NAME_STR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getType_name_str() <em>Type name str</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType_name_str()
   * @generated
   * @ordered
   */
  protected String type_name_str = TYPE_NAME_STR_EDEFAULT;

  /**
   * The cached value of the '{@link #getAtomic_type_specifier() <em>Atomic type specifier</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAtomic_type_specifier()
   * @generated
   * @ordered
   */
  protected atomic_type_specifier atomic_type_specifier;

  /**
   * The cached value of the '{@link #getStruct_or_union_specifier() <em>Struct or union specifier</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStruct_or_union_specifier()
   * @generated
   * @ordered
   */
  protected struct_or_union_specifier struct_or_union_specifier;

  /**
   * The cached value of the '{@link #getEnum_specifier() <em>Enum specifier</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnum_specifier()
   * @generated
   * @ordered
   */
  protected enum_specifier enum_specifier;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected type_specifierImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.TYPE_SPECIFIER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getType_name_str()
  {
    return type_name_str;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setType_name_str(String newType_name_str)
  {
    String oldType_name_str = type_name_str;
    type_name_str = newType_name_str;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPE_SPECIFIER__TYPE_NAME_STR, oldType_name_str, type_name_str));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public atomic_type_specifier getAtomic_type_specifier()
  {
    return atomic_type_specifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAtomic_type_specifier(atomic_type_specifier newAtomic_type_specifier, NotificationChain msgs)
  {
    atomic_type_specifier oldAtomic_type_specifier = atomic_type_specifier;
    atomic_type_specifier = newAtomic_type_specifier;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPE_SPECIFIER__ATOMIC_TYPE_SPECIFIER, oldAtomic_type_specifier, newAtomic_type_specifier);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAtomic_type_specifier(atomic_type_specifier newAtomic_type_specifier)
  {
    if (newAtomic_type_specifier != atomic_type_specifier)
    {
      NotificationChain msgs = null;
      if (atomic_type_specifier != null)
        msgs = ((InternalEObject)atomic_type_specifier).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPE_SPECIFIER__ATOMIC_TYPE_SPECIFIER, null, msgs);
      if (newAtomic_type_specifier != null)
        msgs = ((InternalEObject)newAtomic_type_specifier).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPE_SPECIFIER__ATOMIC_TYPE_SPECIFIER, null, msgs);
      msgs = basicSetAtomic_type_specifier(newAtomic_type_specifier, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPE_SPECIFIER__ATOMIC_TYPE_SPECIFIER, newAtomic_type_specifier, newAtomic_type_specifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public struct_or_union_specifier getStruct_or_union_specifier()
  {
    return struct_or_union_specifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStruct_or_union_specifier(struct_or_union_specifier newStruct_or_union_specifier, NotificationChain msgs)
  {
    struct_or_union_specifier oldStruct_or_union_specifier = struct_or_union_specifier;
    struct_or_union_specifier = newStruct_or_union_specifier;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPE_SPECIFIER__STRUCT_OR_UNION_SPECIFIER, oldStruct_or_union_specifier, newStruct_or_union_specifier);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStruct_or_union_specifier(struct_or_union_specifier newStruct_or_union_specifier)
  {
    if (newStruct_or_union_specifier != struct_or_union_specifier)
    {
      NotificationChain msgs = null;
      if (struct_or_union_specifier != null)
        msgs = ((InternalEObject)struct_or_union_specifier).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPE_SPECIFIER__STRUCT_OR_UNION_SPECIFIER, null, msgs);
      if (newStruct_or_union_specifier != null)
        msgs = ((InternalEObject)newStruct_or_union_specifier).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPE_SPECIFIER__STRUCT_OR_UNION_SPECIFIER, null, msgs);
      msgs = basicSetStruct_or_union_specifier(newStruct_or_union_specifier, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPE_SPECIFIER__STRUCT_OR_UNION_SPECIFIER, newStruct_or_union_specifier, newStruct_or_union_specifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public enum_specifier getEnum_specifier()
  {
    return enum_specifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEnum_specifier(enum_specifier newEnum_specifier, NotificationChain msgs)
  {
    enum_specifier oldEnum_specifier = enum_specifier;
    enum_specifier = newEnum_specifier;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPE_SPECIFIER__ENUM_SPECIFIER, oldEnum_specifier, newEnum_specifier);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEnum_specifier(enum_specifier newEnum_specifier)
  {
    if (newEnum_specifier != enum_specifier)
    {
      NotificationChain msgs = null;
      if (enum_specifier != null)
        msgs = ((InternalEObject)enum_specifier).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPE_SPECIFIER__ENUM_SPECIFIER, null, msgs);
      if (newEnum_specifier != null)
        msgs = ((InternalEObject)newEnum_specifier).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPE_SPECIFIER__ENUM_SPECIFIER, null, msgs);
      msgs = basicSetEnum_specifier(newEnum_specifier, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPE_SPECIFIER__ENUM_SPECIFIER, newEnum_specifier, newEnum_specifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.TYPE_SPECIFIER__ATOMIC_TYPE_SPECIFIER:
        return basicSetAtomic_type_specifier(null, msgs);
      case MyDslPackage.TYPE_SPECIFIER__STRUCT_OR_UNION_SPECIFIER:
        return basicSetStruct_or_union_specifier(null, msgs);
      case MyDslPackage.TYPE_SPECIFIER__ENUM_SPECIFIER:
        return basicSetEnum_specifier(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.TYPE_SPECIFIER__TYPE_NAME_STR:
        return getType_name_str();
      case MyDslPackage.TYPE_SPECIFIER__ATOMIC_TYPE_SPECIFIER:
        return getAtomic_type_specifier();
      case MyDslPackage.TYPE_SPECIFIER__STRUCT_OR_UNION_SPECIFIER:
        return getStruct_or_union_specifier();
      case MyDslPackage.TYPE_SPECIFIER__ENUM_SPECIFIER:
        return getEnum_specifier();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.TYPE_SPECIFIER__TYPE_NAME_STR:
        setType_name_str((String)newValue);
        return;
      case MyDslPackage.TYPE_SPECIFIER__ATOMIC_TYPE_SPECIFIER:
        setAtomic_type_specifier((atomic_type_specifier)newValue);
        return;
      case MyDslPackage.TYPE_SPECIFIER__STRUCT_OR_UNION_SPECIFIER:
        setStruct_or_union_specifier((struct_or_union_specifier)newValue);
        return;
      case MyDslPackage.TYPE_SPECIFIER__ENUM_SPECIFIER:
        setEnum_specifier((enum_specifier)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.TYPE_SPECIFIER__TYPE_NAME_STR:
        setType_name_str(TYPE_NAME_STR_EDEFAULT);
        return;
      case MyDslPackage.TYPE_SPECIFIER__ATOMIC_TYPE_SPECIFIER:
        setAtomic_type_specifier((atomic_type_specifier)null);
        return;
      case MyDslPackage.TYPE_SPECIFIER__STRUCT_OR_UNION_SPECIFIER:
        setStruct_or_union_specifier((struct_or_union_specifier)null);
        return;
      case MyDslPackage.TYPE_SPECIFIER__ENUM_SPECIFIER:
        setEnum_specifier((enum_specifier)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.TYPE_SPECIFIER__TYPE_NAME_STR:
        return TYPE_NAME_STR_EDEFAULT == null ? type_name_str != null : !TYPE_NAME_STR_EDEFAULT.equals(type_name_str);
      case MyDslPackage.TYPE_SPECIFIER__ATOMIC_TYPE_SPECIFIER:
        return atomic_type_specifier != null;
      case MyDslPackage.TYPE_SPECIFIER__STRUCT_OR_UNION_SPECIFIER:
        return struct_or_union_specifier != null;
      case MyDslPackage.TYPE_SPECIFIER__ENUM_SPECIFIER:
        return enum_specifier != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (type_name_str: ");
    result.append(type_name_str);
    result.append(')');
    return result.toString();
  }

} //type_specifierImpl
