/**
 * generated by Xtext 2.13.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.abstract_declarator;
import org.xtext.example.mydsl.myDsl.assignment_expression;
import org.xtext.example.mydsl.myDsl.direct_abstract_declarator;
import org.xtext.example.mydsl.myDsl.direct_abstract_declarator_linha;
import org.xtext.example.mydsl.myDsl.parameter_type_list;
import org.xtext.example.mydsl.myDsl.type_qualifier_list;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>direct abstract declarator</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.direct_abstract_declaratorImpl#getAbstract_declarator <em>Abstract declarator</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.direct_abstract_declaratorImpl#getType_qualifier_list <em>Type qualifier list</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.direct_abstract_declaratorImpl#getAssignment_expression <em>Assignment expression</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.direct_abstract_declaratorImpl#getParameter_type_list <em>Parameter type list</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.direct_abstract_declaratorImpl#getDirect_abstract_declarator_linha <em>Direct abstract declarator linha</em>}</li>
 * </ul>
 *
 * @generated
 */
public class direct_abstract_declaratorImpl extends MinimalEObjectImpl.Container implements direct_abstract_declarator
{
  /**
   * The cached value of the '{@link #getAbstract_declarator() <em>Abstract declarator</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAbstract_declarator()
   * @generated
   * @ordered
   */
  protected abstract_declarator abstract_declarator;

  /**
   * The cached value of the '{@link #getType_qualifier_list() <em>Type qualifier list</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType_qualifier_list()
   * @generated
   * @ordered
   */
  protected type_qualifier_list type_qualifier_list;

  /**
   * The cached value of the '{@link #getAssignment_expression() <em>Assignment expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAssignment_expression()
   * @generated
   * @ordered
   */
  protected assignment_expression assignment_expression;

  /**
   * The cached value of the '{@link #getParameter_type_list() <em>Parameter type list</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParameter_type_list()
   * @generated
   * @ordered
   */
  protected parameter_type_list parameter_type_list;

  /**
   * The cached value of the '{@link #getDirect_abstract_declarator_linha() <em>Direct abstract declarator linha</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDirect_abstract_declarator_linha()
   * @generated
   * @ordered
   */
  protected direct_abstract_declarator_linha direct_abstract_declarator_linha;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected direct_abstract_declaratorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.DIRECT_ABSTRACT_DECLARATOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public abstract_declarator getAbstract_declarator()
  {
    return abstract_declarator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAbstract_declarator(abstract_declarator newAbstract_declarator, NotificationChain msgs)
  {
    abstract_declarator oldAbstract_declarator = abstract_declarator;
    abstract_declarator = newAbstract_declarator;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__ABSTRACT_DECLARATOR, oldAbstract_declarator, newAbstract_declarator);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAbstract_declarator(abstract_declarator newAbstract_declarator)
  {
    if (newAbstract_declarator != abstract_declarator)
    {
      NotificationChain msgs = null;
      if (abstract_declarator != null)
        msgs = ((InternalEObject)abstract_declarator).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__ABSTRACT_DECLARATOR, null, msgs);
      if (newAbstract_declarator != null)
        msgs = ((InternalEObject)newAbstract_declarator).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__ABSTRACT_DECLARATOR, null, msgs);
      msgs = basicSetAbstract_declarator(newAbstract_declarator, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__ABSTRACT_DECLARATOR, newAbstract_declarator, newAbstract_declarator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public type_qualifier_list getType_qualifier_list()
  {
    return type_qualifier_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetType_qualifier_list(type_qualifier_list newType_qualifier_list, NotificationChain msgs)
  {
    type_qualifier_list oldType_qualifier_list = type_qualifier_list;
    type_qualifier_list = newType_qualifier_list;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__TYPE_QUALIFIER_LIST, oldType_qualifier_list, newType_qualifier_list);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setType_qualifier_list(type_qualifier_list newType_qualifier_list)
  {
    if (newType_qualifier_list != type_qualifier_list)
    {
      NotificationChain msgs = null;
      if (type_qualifier_list != null)
        msgs = ((InternalEObject)type_qualifier_list).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__TYPE_QUALIFIER_LIST, null, msgs);
      if (newType_qualifier_list != null)
        msgs = ((InternalEObject)newType_qualifier_list).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__TYPE_QUALIFIER_LIST, null, msgs);
      msgs = basicSetType_qualifier_list(newType_qualifier_list, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__TYPE_QUALIFIER_LIST, newType_qualifier_list, newType_qualifier_list));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public assignment_expression getAssignment_expression()
  {
    return assignment_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAssignment_expression(assignment_expression newAssignment_expression, NotificationChain msgs)
  {
    assignment_expression oldAssignment_expression = assignment_expression;
    assignment_expression = newAssignment_expression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__ASSIGNMENT_EXPRESSION, oldAssignment_expression, newAssignment_expression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAssignment_expression(assignment_expression newAssignment_expression)
  {
    if (newAssignment_expression != assignment_expression)
    {
      NotificationChain msgs = null;
      if (assignment_expression != null)
        msgs = ((InternalEObject)assignment_expression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__ASSIGNMENT_EXPRESSION, null, msgs);
      if (newAssignment_expression != null)
        msgs = ((InternalEObject)newAssignment_expression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__ASSIGNMENT_EXPRESSION, null, msgs);
      msgs = basicSetAssignment_expression(newAssignment_expression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__ASSIGNMENT_EXPRESSION, newAssignment_expression, newAssignment_expression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public parameter_type_list getParameter_type_list()
  {
    return parameter_type_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetParameter_type_list(parameter_type_list newParameter_type_list, NotificationChain msgs)
  {
    parameter_type_list oldParameter_type_list = parameter_type_list;
    parameter_type_list = newParameter_type_list;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMETER_TYPE_LIST, oldParameter_type_list, newParameter_type_list);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setParameter_type_list(parameter_type_list newParameter_type_list)
  {
    if (newParameter_type_list != parameter_type_list)
    {
      NotificationChain msgs = null;
      if (parameter_type_list != null)
        msgs = ((InternalEObject)parameter_type_list).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMETER_TYPE_LIST, null, msgs);
      if (newParameter_type_list != null)
        msgs = ((InternalEObject)newParameter_type_list).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMETER_TYPE_LIST, null, msgs);
      msgs = basicSetParameter_type_list(newParameter_type_list, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMETER_TYPE_LIST, newParameter_type_list, newParameter_type_list));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public direct_abstract_declarator_linha getDirect_abstract_declarator_linha()
  {
    return direct_abstract_declarator_linha;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDirect_abstract_declarator_linha(direct_abstract_declarator_linha newDirect_abstract_declarator_linha, NotificationChain msgs)
  {
    direct_abstract_declarator_linha oldDirect_abstract_declarator_linha = direct_abstract_declarator_linha;
    direct_abstract_declarator_linha = newDirect_abstract_declarator_linha;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__DIRECT_ABSTRACT_DECLARATOR_LINHA, oldDirect_abstract_declarator_linha, newDirect_abstract_declarator_linha);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDirect_abstract_declarator_linha(direct_abstract_declarator_linha newDirect_abstract_declarator_linha)
  {
    if (newDirect_abstract_declarator_linha != direct_abstract_declarator_linha)
    {
      NotificationChain msgs = null;
      if (direct_abstract_declarator_linha != null)
        msgs = ((InternalEObject)direct_abstract_declarator_linha).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__DIRECT_ABSTRACT_DECLARATOR_LINHA, null, msgs);
      if (newDirect_abstract_declarator_linha != null)
        msgs = ((InternalEObject)newDirect_abstract_declarator_linha).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__DIRECT_ABSTRACT_DECLARATOR_LINHA, null, msgs);
      msgs = basicSetDirect_abstract_declarator_linha(newDirect_abstract_declarator_linha, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__DIRECT_ABSTRACT_DECLARATOR_LINHA, newDirect_abstract_declarator_linha, newDirect_abstract_declarator_linha));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__ABSTRACT_DECLARATOR:
        return basicSetAbstract_declarator(null, msgs);
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__TYPE_QUALIFIER_LIST:
        return basicSetType_qualifier_list(null, msgs);
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__ASSIGNMENT_EXPRESSION:
        return basicSetAssignment_expression(null, msgs);
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMETER_TYPE_LIST:
        return basicSetParameter_type_list(null, msgs);
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__DIRECT_ABSTRACT_DECLARATOR_LINHA:
        return basicSetDirect_abstract_declarator_linha(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__ABSTRACT_DECLARATOR:
        return getAbstract_declarator();
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__TYPE_QUALIFIER_LIST:
        return getType_qualifier_list();
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__ASSIGNMENT_EXPRESSION:
        return getAssignment_expression();
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMETER_TYPE_LIST:
        return getParameter_type_list();
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__DIRECT_ABSTRACT_DECLARATOR_LINHA:
        return getDirect_abstract_declarator_linha();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__ABSTRACT_DECLARATOR:
        setAbstract_declarator((abstract_declarator)newValue);
        return;
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__TYPE_QUALIFIER_LIST:
        setType_qualifier_list((type_qualifier_list)newValue);
        return;
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__ASSIGNMENT_EXPRESSION:
        setAssignment_expression((assignment_expression)newValue);
        return;
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMETER_TYPE_LIST:
        setParameter_type_list((parameter_type_list)newValue);
        return;
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__DIRECT_ABSTRACT_DECLARATOR_LINHA:
        setDirect_abstract_declarator_linha((direct_abstract_declarator_linha)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__ABSTRACT_DECLARATOR:
        setAbstract_declarator((abstract_declarator)null);
        return;
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__TYPE_QUALIFIER_LIST:
        setType_qualifier_list((type_qualifier_list)null);
        return;
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__ASSIGNMENT_EXPRESSION:
        setAssignment_expression((assignment_expression)null);
        return;
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMETER_TYPE_LIST:
        setParameter_type_list((parameter_type_list)null);
        return;
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__DIRECT_ABSTRACT_DECLARATOR_LINHA:
        setDirect_abstract_declarator_linha((direct_abstract_declarator_linha)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__ABSTRACT_DECLARATOR:
        return abstract_declarator != null;
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__TYPE_QUALIFIER_LIST:
        return type_qualifier_list != null;
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__ASSIGNMENT_EXPRESSION:
        return assignment_expression != null;
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__PARAMETER_TYPE_LIST:
        return parameter_type_list != null;
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR__DIRECT_ABSTRACT_DECLARATOR_LINHA:
        return direct_abstract_declarator_linha != null;
    }
    return super.eIsSet(featureID);
  }

} //direct_abstract_declaratorImpl
