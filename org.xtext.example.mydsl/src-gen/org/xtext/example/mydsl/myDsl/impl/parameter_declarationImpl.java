/**
 * generated by Xtext 2.13.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.abstract_declarator;
import org.xtext.example.mydsl.myDsl.declaration_specifiers;
import org.xtext.example.mydsl.myDsl.declarator;
import org.xtext.example.mydsl.myDsl.parameter_declaration;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>parameter declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.parameter_declarationImpl#getDeclaration_specifiers <em>Declaration specifiers</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.parameter_declarationImpl#getDeclarator <em>Declarator</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.parameter_declarationImpl#getAbstract_declarator <em>Abstract declarator</em>}</li>
 * </ul>
 *
 * @generated
 */
public class parameter_declarationImpl extends MinimalEObjectImpl.Container implements parameter_declaration
{
  /**
   * The cached value of the '{@link #getDeclaration_specifiers() <em>Declaration specifiers</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeclaration_specifiers()
   * @generated
   * @ordered
   */
  protected declaration_specifiers declaration_specifiers;

  /**
   * The cached value of the '{@link #getDeclarator() <em>Declarator</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeclarator()
   * @generated
   * @ordered
   */
  protected declarator declarator;

  /**
   * The cached value of the '{@link #getAbstract_declarator() <em>Abstract declarator</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAbstract_declarator()
   * @generated
   * @ordered
   */
  protected abstract_declarator abstract_declarator;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected parameter_declarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.PARAMETER_DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public declaration_specifiers getDeclaration_specifiers()
  {
    return declaration_specifiers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDeclaration_specifiers(declaration_specifiers newDeclaration_specifiers, NotificationChain msgs)
  {
    declaration_specifiers oldDeclaration_specifiers = declaration_specifiers;
    declaration_specifiers = newDeclaration_specifiers;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.PARAMETER_DECLARATION__DECLARATION_SPECIFIERS, oldDeclaration_specifiers, newDeclaration_specifiers);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDeclaration_specifiers(declaration_specifiers newDeclaration_specifiers)
  {
    if (newDeclaration_specifiers != declaration_specifiers)
    {
      NotificationChain msgs = null;
      if (declaration_specifiers != null)
        msgs = ((InternalEObject)declaration_specifiers).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PARAMETER_DECLARATION__DECLARATION_SPECIFIERS, null, msgs);
      if (newDeclaration_specifiers != null)
        msgs = ((InternalEObject)newDeclaration_specifiers).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PARAMETER_DECLARATION__DECLARATION_SPECIFIERS, null, msgs);
      msgs = basicSetDeclaration_specifiers(newDeclaration_specifiers, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PARAMETER_DECLARATION__DECLARATION_SPECIFIERS, newDeclaration_specifiers, newDeclaration_specifiers));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public declarator getDeclarator()
  {
    return declarator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDeclarator(declarator newDeclarator, NotificationChain msgs)
  {
    declarator oldDeclarator = declarator;
    declarator = newDeclarator;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.PARAMETER_DECLARATION__DECLARATOR, oldDeclarator, newDeclarator);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDeclarator(declarator newDeclarator)
  {
    if (newDeclarator != declarator)
    {
      NotificationChain msgs = null;
      if (declarator != null)
        msgs = ((InternalEObject)declarator).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PARAMETER_DECLARATION__DECLARATOR, null, msgs);
      if (newDeclarator != null)
        msgs = ((InternalEObject)newDeclarator).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PARAMETER_DECLARATION__DECLARATOR, null, msgs);
      msgs = basicSetDeclarator(newDeclarator, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PARAMETER_DECLARATION__DECLARATOR, newDeclarator, newDeclarator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public abstract_declarator getAbstract_declarator()
  {
    return abstract_declarator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAbstract_declarator(abstract_declarator newAbstract_declarator, NotificationChain msgs)
  {
    abstract_declarator oldAbstract_declarator = abstract_declarator;
    abstract_declarator = newAbstract_declarator;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.PARAMETER_DECLARATION__ABSTRACT_DECLARATOR, oldAbstract_declarator, newAbstract_declarator);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAbstract_declarator(abstract_declarator newAbstract_declarator)
  {
    if (newAbstract_declarator != abstract_declarator)
    {
      NotificationChain msgs = null;
      if (abstract_declarator != null)
        msgs = ((InternalEObject)abstract_declarator).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PARAMETER_DECLARATION__ABSTRACT_DECLARATOR, null, msgs);
      if (newAbstract_declarator != null)
        msgs = ((InternalEObject)newAbstract_declarator).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PARAMETER_DECLARATION__ABSTRACT_DECLARATOR, null, msgs);
      msgs = basicSetAbstract_declarator(newAbstract_declarator, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PARAMETER_DECLARATION__ABSTRACT_DECLARATOR, newAbstract_declarator, newAbstract_declarator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.PARAMETER_DECLARATION__DECLARATION_SPECIFIERS:
        return basicSetDeclaration_specifiers(null, msgs);
      case MyDslPackage.PARAMETER_DECLARATION__DECLARATOR:
        return basicSetDeclarator(null, msgs);
      case MyDslPackage.PARAMETER_DECLARATION__ABSTRACT_DECLARATOR:
        return basicSetAbstract_declarator(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.PARAMETER_DECLARATION__DECLARATION_SPECIFIERS:
        return getDeclaration_specifiers();
      case MyDslPackage.PARAMETER_DECLARATION__DECLARATOR:
        return getDeclarator();
      case MyDslPackage.PARAMETER_DECLARATION__ABSTRACT_DECLARATOR:
        return getAbstract_declarator();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.PARAMETER_DECLARATION__DECLARATION_SPECIFIERS:
        setDeclaration_specifiers((declaration_specifiers)newValue);
        return;
      case MyDslPackage.PARAMETER_DECLARATION__DECLARATOR:
        setDeclarator((declarator)newValue);
        return;
      case MyDslPackage.PARAMETER_DECLARATION__ABSTRACT_DECLARATOR:
        setAbstract_declarator((abstract_declarator)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.PARAMETER_DECLARATION__DECLARATION_SPECIFIERS:
        setDeclaration_specifiers((declaration_specifiers)null);
        return;
      case MyDslPackage.PARAMETER_DECLARATION__DECLARATOR:
        setDeclarator((declarator)null);
        return;
      case MyDslPackage.PARAMETER_DECLARATION__ABSTRACT_DECLARATOR:
        setAbstract_declarator((abstract_declarator)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.PARAMETER_DECLARATION__DECLARATION_SPECIFIERS:
        return declaration_specifiers != null;
      case MyDslPackage.PARAMETER_DECLARATION__DECLARATOR:
        return declarator != null;
      case MyDslPackage.PARAMETER_DECLARATION__ABSTRACT_DECLARATOR:
        return abstract_declarator != null;
    }
    return super.eIsSet(featureID);
  }

} //parameter_declarationImpl
