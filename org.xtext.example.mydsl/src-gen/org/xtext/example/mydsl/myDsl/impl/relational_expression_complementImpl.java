/**
 * generated by Xtext 2.13.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.relational_expression_complement;
import org.xtext.example.mydsl.myDsl.shift_expression;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>relational expression complement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.relational_expression_complementImpl#getMenor <em>Menor</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.relational_expression_complementImpl#getShift_expression <em>Shift expression</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.relational_expression_complementImpl#getMaior <em>Maior</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.relational_expression_complementImpl#getMenor_igual <em>Menor igual</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.relational_expression_complementImpl#getMaior_igual <em>Maior igual</em>}</li>
 * </ul>
 *
 * @generated
 */
public class relational_expression_complementImpl extends MinimalEObjectImpl.Container implements relational_expression_complement
{
  /**
   * The default value of the '{@link #getMenor() <em>Menor</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMenor()
   * @generated
   * @ordered
   */
  protected static final String MENOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMenor() <em>Menor</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMenor()
   * @generated
   * @ordered
   */
  protected String menor = MENOR_EDEFAULT;

  /**
   * The cached value of the '{@link #getShift_expression() <em>Shift expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getShift_expression()
   * @generated
   * @ordered
   */
  protected shift_expression shift_expression;

  /**
   * The default value of the '{@link #getMaior() <em>Maior</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaior()
   * @generated
   * @ordered
   */
  protected static final String MAIOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMaior() <em>Maior</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaior()
   * @generated
   * @ordered
   */
  protected String maior = MAIOR_EDEFAULT;

  /**
   * The default value of the '{@link #getMenor_igual() <em>Menor igual</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMenor_igual()
   * @generated
   * @ordered
   */
  protected static final String MENOR_IGUAL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMenor_igual() <em>Menor igual</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMenor_igual()
   * @generated
   * @ordered
   */
  protected String menor_igual = MENOR_IGUAL_EDEFAULT;

  /**
   * The default value of the '{@link #getMaior_igual() <em>Maior igual</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaior_igual()
   * @generated
   * @ordered
   */
  protected static final String MAIOR_IGUAL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMaior_igual() <em>Maior igual</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaior_igual()
   * @generated
   * @ordered
   */
  protected String maior_igual = MAIOR_IGUAL_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected relational_expression_complementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.RELATIONAL_EXPRESSION_COMPLEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMenor()
  {
    return menor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMenor(String newMenor)
  {
    String oldMenor = menor;
    menor = newMenor;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__MENOR, oldMenor, menor));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public shift_expression getShift_expression()
  {
    return shift_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetShift_expression(shift_expression newShift_expression, NotificationChain msgs)
  {
    shift_expression oldShift_expression = shift_expression;
    shift_expression = newShift_expression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__SHIFT_EXPRESSION, oldShift_expression, newShift_expression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setShift_expression(shift_expression newShift_expression)
  {
    if (newShift_expression != shift_expression)
    {
      NotificationChain msgs = null;
      if (shift_expression != null)
        msgs = ((InternalEObject)shift_expression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__SHIFT_EXPRESSION, null, msgs);
      if (newShift_expression != null)
        msgs = ((InternalEObject)newShift_expression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__SHIFT_EXPRESSION, null, msgs);
      msgs = basicSetShift_expression(newShift_expression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__SHIFT_EXPRESSION, newShift_expression, newShift_expression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMaior()
  {
    return maior;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMaior(String newMaior)
  {
    String oldMaior = maior;
    maior = newMaior;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__MAIOR, oldMaior, maior));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMenor_igual()
  {
    return menor_igual;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMenor_igual(String newMenor_igual)
  {
    String oldMenor_igual = menor_igual;
    menor_igual = newMenor_igual;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__MENOR_IGUAL, oldMenor_igual, menor_igual));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMaior_igual()
  {
    return maior_igual;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMaior_igual(String newMaior_igual)
  {
    String oldMaior_igual = maior_igual;
    maior_igual = newMaior_igual;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__MAIOR_IGUAL, oldMaior_igual, maior_igual));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__SHIFT_EXPRESSION:
        return basicSetShift_expression(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__MENOR:
        return getMenor();
      case MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__SHIFT_EXPRESSION:
        return getShift_expression();
      case MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__MAIOR:
        return getMaior();
      case MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__MENOR_IGUAL:
        return getMenor_igual();
      case MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__MAIOR_IGUAL:
        return getMaior_igual();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__MENOR:
        setMenor((String)newValue);
        return;
      case MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__SHIFT_EXPRESSION:
        setShift_expression((shift_expression)newValue);
        return;
      case MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__MAIOR:
        setMaior((String)newValue);
        return;
      case MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__MENOR_IGUAL:
        setMenor_igual((String)newValue);
        return;
      case MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__MAIOR_IGUAL:
        setMaior_igual((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__MENOR:
        setMenor(MENOR_EDEFAULT);
        return;
      case MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__SHIFT_EXPRESSION:
        setShift_expression((shift_expression)null);
        return;
      case MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__MAIOR:
        setMaior(MAIOR_EDEFAULT);
        return;
      case MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__MENOR_IGUAL:
        setMenor_igual(MENOR_IGUAL_EDEFAULT);
        return;
      case MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__MAIOR_IGUAL:
        setMaior_igual(MAIOR_IGUAL_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__MENOR:
        return MENOR_EDEFAULT == null ? menor != null : !MENOR_EDEFAULT.equals(menor);
      case MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__SHIFT_EXPRESSION:
        return shift_expression != null;
      case MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__MAIOR:
        return MAIOR_EDEFAULT == null ? maior != null : !MAIOR_EDEFAULT.equals(maior);
      case MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__MENOR_IGUAL:
        return MENOR_IGUAL_EDEFAULT == null ? menor_igual != null : !MENOR_IGUAL_EDEFAULT.equals(menor_igual);
      case MyDslPackage.RELATIONAL_EXPRESSION_COMPLEMENT__MAIOR_IGUAL:
        return MAIOR_IGUAL_EDEFAULT == null ? maior_igual != null : !MAIOR_IGUAL_EDEFAULT.equals(maior_igual);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (menor: ");
    result.append(menor);
    result.append(", maior: ");
    result.append(maior);
    result.append(", menor_igual: ");
    result.append(menor_igual);
    result.append(", maior_igual: ");
    result.append(maior_igual);
    result.append(')');
    return result.toString();
  }

} //relational_expression_complementImpl
