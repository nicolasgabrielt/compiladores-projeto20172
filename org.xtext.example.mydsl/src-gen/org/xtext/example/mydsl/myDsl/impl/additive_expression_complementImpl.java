/**
 * generated by Xtext 2.13.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.additive_expression_complement;
import org.xtext.example.mydsl.myDsl.multiplicative_expression;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>additive expression complement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.additive_expression_complementImpl#getMais <em>Mais</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.additive_expression_complementImpl#getMultiplicative_expression <em>Multiplicative expression</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.additive_expression_complementImpl#getMenos <em>Menos</em>}</li>
 * </ul>
 *
 * @generated
 */
public class additive_expression_complementImpl extends MinimalEObjectImpl.Container implements additive_expression_complement
{
  /**
   * The default value of the '{@link #getMais() <em>Mais</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMais()
   * @generated
   * @ordered
   */
  protected static final String MAIS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMais() <em>Mais</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMais()
   * @generated
   * @ordered
   */
  protected String mais = MAIS_EDEFAULT;

  /**
   * The cached value of the '{@link #getMultiplicative_expression() <em>Multiplicative expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMultiplicative_expression()
   * @generated
   * @ordered
   */
  protected multiplicative_expression multiplicative_expression;

  /**
   * The default value of the '{@link #getMenos() <em>Menos</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMenos()
   * @generated
   * @ordered
   */
  protected static final String MENOS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMenos() <em>Menos</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMenos()
   * @generated
   * @ordered
   */
  protected String menos = MENOS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected additive_expression_complementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.ADDITIVE_EXPRESSION_COMPLEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMais()
  {
    return mais;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMais(String newMais)
  {
    String oldMais = mais;
    mais = newMais;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.ADDITIVE_EXPRESSION_COMPLEMENT__MAIS, oldMais, mais));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public multiplicative_expression getMultiplicative_expression()
  {
    return multiplicative_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMultiplicative_expression(multiplicative_expression newMultiplicative_expression, NotificationChain msgs)
  {
    multiplicative_expression oldMultiplicative_expression = multiplicative_expression;
    multiplicative_expression = newMultiplicative_expression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.ADDITIVE_EXPRESSION_COMPLEMENT__MULTIPLICATIVE_EXPRESSION, oldMultiplicative_expression, newMultiplicative_expression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMultiplicative_expression(multiplicative_expression newMultiplicative_expression)
  {
    if (newMultiplicative_expression != multiplicative_expression)
    {
      NotificationChain msgs = null;
      if (multiplicative_expression != null)
        msgs = ((InternalEObject)multiplicative_expression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.ADDITIVE_EXPRESSION_COMPLEMENT__MULTIPLICATIVE_EXPRESSION, null, msgs);
      if (newMultiplicative_expression != null)
        msgs = ((InternalEObject)newMultiplicative_expression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.ADDITIVE_EXPRESSION_COMPLEMENT__MULTIPLICATIVE_EXPRESSION, null, msgs);
      msgs = basicSetMultiplicative_expression(newMultiplicative_expression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.ADDITIVE_EXPRESSION_COMPLEMENT__MULTIPLICATIVE_EXPRESSION, newMultiplicative_expression, newMultiplicative_expression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMenos()
  {
    return menos;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMenos(String newMenos)
  {
    String oldMenos = menos;
    menos = newMenos;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.ADDITIVE_EXPRESSION_COMPLEMENT__MENOS, oldMenos, menos));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.ADDITIVE_EXPRESSION_COMPLEMENT__MULTIPLICATIVE_EXPRESSION:
        return basicSetMultiplicative_expression(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.ADDITIVE_EXPRESSION_COMPLEMENT__MAIS:
        return getMais();
      case MyDslPackage.ADDITIVE_EXPRESSION_COMPLEMENT__MULTIPLICATIVE_EXPRESSION:
        return getMultiplicative_expression();
      case MyDslPackage.ADDITIVE_EXPRESSION_COMPLEMENT__MENOS:
        return getMenos();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.ADDITIVE_EXPRESSION_COMPLEMENT__MAIS:
        setMais((String)newValue);
        return;
      case MyDslPackage.ADDITIVE_EXPRESSION_COMPLEMENT__MULTIPLICATIVE_EXPRESSION:
        setMultiplicative_expression((multiplicative_expression)newValue);
        return;
      case MyDslPackage.ADDITIVE_EXPRESSION_COMPLEMENT__MENOS:
        setMenos((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.ADDITIVE_EXPRESSION_COMPLEMENT__MAIS:
        setMais(MAIS_EDEFAULT);
        return;
      case MyDslPackage.ADDITIVE_EXPRESSION_COMPLEMENT__MULTIPLICATIVE_EXPRESSION:
        setMultiplicative_expression((multiplicative_expression)null);
        return;
      case MyDslPackage.ADDITIVE_EXPRESSION_COMPLEMENT__MENOS:
        setMenos(MENOS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.ADDITIVE_EXPRESSION_COMPLEMENT__MAIS:
        return MAIS_EDEFAULT == null ? mais != null : !MAIS_EDEFAULT.equals(mais);
      case MyDslPackage.ADDITIVE_EXPRESSION_COMPLEMENT__MULTIPLICATIVE_EXPRESSION:
        return multiplicative_expression != null;
      case MyDslPackage.ADDITIVE_EXPRESSION_COMPLEMENT__MENOS:
        return MENOS_EDEFAULT == null ? menos != null : !MENOS_EDEFAULT.equals(menos);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (mais: ");
    result.append(mais);
    result.append(", menos: ");
    result.append(menos);
    result.append(')');
    return result.toString();
  }

} //additive_expression_complementImpl
